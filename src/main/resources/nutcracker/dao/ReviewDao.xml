<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="nutcracker.dao.ReviewDao">

  <resultMap type="hashmap"   id="map">
    <id     column="rvno"     property="reviewNo"/>
    <result column="mno"      property="memberNo"/>
    <result column="name"     property="name"/>
    <result column="path"     property="photoPath"/>
    <result column="rv_date"  property="postTime"/>
    <result column='head'     property='titleHead'/>
    <result column="title"    property="title"/>
    <result column="cont"     property="content"/>
    <result column="view_cnt" property="viewCount"/>
    <result column="hodu_cnt" property="hoduCount"/>
    <result column="rep_cnt"  property="reportCount"/>
    
    <!-- <collection property="photoList" ofType="photo">
      <id     column="rpno"   property="photoNo"/>
      <result column="path"   property="photoPath"/>
    </collection> -->
  </resultMap>
  
  <select id="countAll" resultType="int">
    select count(*) from review;
  </select>
  
  <select id="getList" parameterType="map" resultMap="map">
    select 
      r.rvno, 
      m.name, 
      date_format(r.rv_date,'%Y-%m-%d') as rv_date, 
      r.path,
      r.head, 
      r.title, 
      ifnull(r.view_cnt, 0) as view_cnt, 
      ifnull(r.hodu_cnt, 0) as hodu_cnt,
      ifnull(r.rep_cnt, 0) as rep_cnt
    from review r
      left outer join memb m on r.mno=m.mno
    where r.rep_cnt &lt; 1 and r.del_yn='n'
    order by r.rvno desc
    limit #{startRowIndex}, #{rowSize}
  </select>
  
  <select id="getListMy" parameterType="map" resultMap="map">
    select 
      r.rvno, 
      r.path,
      r.title, 
      date_format(r.rv_date,'%Y-%m-%d') as rv_date, 
      ifnull(r.view_cnt, 0) as view_cnt, 
      ifnull(r.hodu_cnt, 0) as hodu_cnt,
      ifnull(r.rep_cnt, 0) as rep_cnt
    from review r
    where r.mno=#{memberNo}
    order by r.rv_date desc
    limit #{startRowIndex}, #{rowSize}
  </select>
  
  <select id="getReportList" parameterType="map" resultMap="map">
    select 
      r.rvno, 
      r.path,
      r.title,
      m.name,
      date_format(r.rv_date,'%Y-%m-%d') as rv_date, 
      ifnull(r.view_cnt, 0) as view_cnt, 
      ifnull(r.hodu_cnt, 0) as hodu_cnt,
      ifnull(r.rep_cnt, 0) as rep_cnt
    from review r
      left join memb m on r.mno=m.mno
    where r.rep_cnt &gt;= 1 
    order by r.rv_date desc
    limit #{startRowIndex}, #{rowSize}
  </select>
  
  <select id="countReport" resultType="int">
    select count(*) from review where rep_cnt &gt;= 1
  </select>
  
  <update id="updateRead" parameterType="String">
    update review
    set view_cnt=view_cnt + 1
    where rvno=#{reviewNo}
  </update>
  
  <update id="updateHodu" parameterType="String">
    update review
    set hodu_cnt=hodu_cnt + 1
    where rvno=#{reviewNo}
  </update>
  
  <select id='getDetail' parameterType="int" resultMap="map">
    select
		  r.rvno,
		  m.mno,
		  m.name,
		  m.path,
		  date_format(r.rv_date,'%Y-%m-%d %H:%m:%s') as rv_date,
		  r.head,
		  r.title,
		  r.cont,
		  ifnull(r.view_cnt, 0) as view_cnt, 
		  ifnull(r.hodu_cnt, 0) as hodu_cnt
		from review r
		  left outer join memb m on r.mno=m.mno
		where r.rvno=#{value}
  </select>
  
  <insert id="insert" parameterType="map">
    insert into review(rvno, rv_date,head,title,cont,mno,path, view_cnt, hodu_cnt, rep_cnt,del_yn) 
    values(#{reviewNo}, now(),#{titleHead},#{title},#{content},#{memberNo},#{photoPath}, 0, 0, 0,'n');
  </insert>
  
  <insert id="insertPhoto" parameterType="map">
    insert into rev_phot(rvno, path)
    values
    <foreach collection="photoList" item="photo" separator=",">
      (#{reviewNo}, #{photoPath})
    </foreach>        
  </insert>
  
  <update id="update" parameterType="map">
    update review set
		  head=#{titleHead},
		  title=#{title},
		  cont=#{content},
		  path=#{photoPath}
		where rvno=#{reviewNo}
  </update>
  
  <delete id="deleteReportRls" parameterType="int">
    delete from board_rep where rvno=#{value}
  </delete>
  
  <delete id="delete" parameterType="int">
    delete from review where rvno=#{value}
  </delete>
  <!-- <select in="count" parameterType="int" re -->
  
  <select id='searchInTitleContent' parameterType="map" resultMap="map">
    select 
      r.rvno, 
      m.name, 
      date_format(r.rv_date,'%Y-%m-%d') as rv_date, 
      r.path,
      r.head, 
      r.title, 
      ifnull(r.view_cnt, 0) as view_cnt, 
      ifnull(r.hodu_cnt, 0) as hodu_cnt
    from review r
      left outer join memb m on r.mno=m.mno 
    where r.title like concat('%',#{keyword},'%') or r.cont like concat('%',#{keyword},'%')
    order by r.rvno desc
    limit #{startRowIndex}, #{rowSize}
  </select>
  
  <select id='searchInTitle' parameterType="map" resultMap="map">
    select 
      r.rvno, 
      m.name, 
      date_format(r.rv_date,'%Y-%m-%d') as rv_date, 
      r.path,
      r.head, 
      r.title, 
      ifnull(r.view_cnt, 0) as view_cnt, 
      ifnull(r.hodu_cnt, 0) as hodu_cnt
    from review r
      left outer join memb m on r.mno=m.mno 
    where r.title like concat('%',#{keyword},'%')
    order by r.rvno desc
    limit #{startRowIndex}, #{rowSize}
  </select>
  
  <select id='searchInAuth' parameterType="map" resultMap="map">
    select 
      r.rvno, 
      m.name, 
      date_format(r.rv_date,'%Y-%m-%d') as rv_date, 
      r.path,
      r.head, 
      r.title, 
      ifnull(r.view_cnt, 0) as view_cnt, 
      ifnull(r.hodu_cnt, 0) as hodu_cnt
    from review r
      left outer join memb m on r.mno=m.mno 
    where m.name like concat('%',#{keyword},'%')
    order by r.rvno desc
    limit #{startRowIndex}, #{rowSize}
  </select>
  
  <select id='checkReport' parameterType='map' resultType='int'>
    select count(*)
    from board_rep
    where mno=#{memberNo} and rvno=#{reviewNo}
  </select>
  
  <insert id='reviewReport' parameterType='map'>
    insert into board_rep(mno, rvno, rwno)
    values(#{memberNo}, #{reviewNo}, #{reasonNo})
  </insert>
  
  <update id='reportPlus' parameterType='int'>
    update review
    set rep_cnt=rep_cnt + 1
    where rvno=#{reviewNo}
  </update>
  
  <update id='resetReport' parameterType='int'>
    update review
    set rep_cnt=0
    where rvno=#{reviewNo}
  </update>
  
  <update id='moveDelete' parameterType='int'>
    update review
    set del_yn='y'
    where rvno=#{reviewNo}
  </update>
  
  <select id='getDeleteList' parameterType='map' resultMap='map'>
    select 
      r.rvno, 
      r.title,
      m.name,
      date_format(r.rv_date,'%Y-%m-%d') as rv_date, 
      ifnull(r.view_cnt, 0) as view_cnt, 
      ifnull(r.hodu_cnt, 0) as hodu_cnt
    from review r
      left join memb m on r.mno=m.mno
    where r.del_yn='y'
    order by r.rv_date desc
    limit #{startRowIndex}, #{rowSize}
  </select>
  
  <select id='countDelete' resultType='int'>
    select count(*) from review where del_yn='y'
  </select>
  
  <update id='resetDelete' parameterType='int'>
    update review
    set del_yn='n'
    where rvno=#{reviewNo}
  </update>
  
</mapper>