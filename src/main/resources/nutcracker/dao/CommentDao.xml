<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="nutcracker.dao.CommentDao">

  <resultMap type="hashmap"   id="map">
    <id     column="ctno"     property="commentNo"/>
    <result column="mno"      property="memberNo"/>
    <result column="name"     property="name"/>
    <result column="path"     property="photoPath"/>
    <result column="ct_date"  property="postTime"/>
    <result column='cont'     property='content'/>
    <result column="rep_cnt"  property="reportCount"/>
    <result column="del_yn"   property="commentDelete"/>
    <result column="botno"    property="boycottNo"/>
    <result column="rvno"    property="reviewNo"/>
    <result column="pno"      property="purchaseNo"/>
    <result column="rwno"     property="reportNo"/>
    <result column="bottitle"     property="boycottTitle"/>
    <result column="reviewtitle"     property="reviewTitle"/>
  </resultMap>
  
  <select id='getReviewCmtList' parameterType="int" resultMap="map">
    select
		  cm.ctno,
		  m.mno,
		  m.name,
		  m.path,
		  cm.ct_date,
		  cm.cont,
		  cm.rep_cnt,
		  cm.del_yn
		from cmt cm, memb m
		where ctno in (select ctno from rev_cmt where rvno=#{value}) and
		  cm.mno=m.mno
  </select>
  
  <insert id="insertReviewCmt" parameterType="map" 
          useGeneratedKeys="true" keyProperty="commentNo" keyColumn="ctno">
    insert into cmt(ctno, mno, ct_date, cont, rep_cnt, del_yn)
    values (#{commentNo}, #{memberNo}, now(), #{content}, 0, 'n')
  </insert>
  
  <insert id="insertReviewCmtCon" parameterType="map">
    insert into rev_cmt(ctno, rvno)
    values (#{commentNo}, #{reviewNo})
  </insert>
  
  <delete id='deleteReviewCmts' parameterType='String'>
    delete c, rc
    from cmt c
      left join rev_cmt rc on rc.ctno=c.ctno
    where rc.rvno=#{ownNo}
  </delete>
  
  <delete id='deleteBoycottCmts' parameterType='int'>
    delete c, bc
    from cmt c
      left join bot_cmt bc on rc.ctno=c.ctno
    where bc.botno=#{boycottNo}
  </delete>
  
  
  
  <select id='getBoycottCommentList' parameterType="int" resultMap="map">
    select
      cm.ctno,
      m.mno,
      m.name,
      m.path,
      date_format(cm.ct_date,'%Y-%m-%d %T') as ct_date,
      cm.cont,
      cm.rep_cnt,
      cm.del_yn
    from cmt cm, memb m
    where ctno in (select ctno from bot_cmt where botno=#{value}) and
      cm.mno=m.mno
  </select>
  
  <select id='getBoycottCommentCount' parameterType="int" resultType="int">
    select count(*)
    from bot_cmt bc
      left outer join bot b on bc.botno = b.botno
    where b.botno=#{value}
  </select>
  
  <insert id='insertBoycottComment' parameterType="map">
    insert into cmt
      (ctno,mno,ct_date,cont,rep_cnt,del_yn)
    values
      (#{commentNo},#{memberNo},now(),#{content},0,'n')
  </insert>
  
   <insert id='insertBoycottCommentRel' parameterType="map">
    insert into bot_cmt(ctno,botno)
    values (LAST_INSERT_ID(), #{boycottNo})
  </insert>
  
  
  <select id='getPurchaseCommentList' parameterType="int" resultMap="map">
    select
      cm.ctno,
      m.mno,
      m.name,
      m.path,
      date_format(cm.ct_date,'%Y-%m-%d %T') as ct_date,
      cm.cont,
      cm.rep_cnt,
      cm.del_yn
    from cmt cm, memb m
    where ctno in (select ctno from pch_cmt where pno=#{value}) and
      cm.mno=m.mno
  </select>
  
  <insert id='insertPurchaseComment' parameterType="map"
  useGeneratedKeys="true" keyProperty="commentNo" keyColumn="ctno">
    insert into cmt
      (ctno,mno,ct_date,cont,rep_cnt,del_yn)
    values
      (#{commentNo},#{memberNo},now(),#{content},0,'n')
  </insert>
  
  <insert id='insertPurchaseCommentRel' parameterType="map">
    insert into pch_cmt(ctno,pno)
    values (#{commentNo}, #{purchaseNo})
  </insert>
  
  
  <insert id='insertCommentReport' parameterType="map">
    insert into cmt_rep(ctno,mno,rwno)
    values (#{commentNo}, #{memberNo}, #{reportNo})
  </insert>
  
  <update id="updateReportCmt" parameterType="map">
    update cmt
    set rep_cnt=rep_cnt + 1
    where ctno=#{commentNo}
  </update>
  
  <select id='countReport' parameterType="map" resultType="int">
    select count(*)
    from cmt_rep
    where ctno=#{commentNo} and mno=#{memberNo}
  </select>
  
  <select id='getCommentReportList' parameterType="map" resultMap="map">
    select
      cm.ctno,
      m.name,
      cm.cont,
      rc.rvno,
      review.title as reviewtitle,
      bc.botno,
      bot.title as bottitle
    from cmt cm
      left outer join memb m on cm.mno=m.mno
      left outer join cmt_rep cr on cm.ctno=cr.ctno
      left outer join rev_cmt rc on cm.ctno=rc.ctno
      left outer join review on rc.rvno=review.rvno
      left outer join bot_cmt bc on cm.ctno=bc.ctno
      left outer join bot on bc.botno=bot.botno
    where cm.rep_cnt &gt; 1
    group by cm.ctno
    limit #{startRowIndex}, #{rowSize}
  </select>
  
  <select id="countTotalList" resultType="int">
    select count(*) from cmt where rep_cnt &gt; 1
  </select>
  
  <select id='getCommentReportReasons' parameterType="int" resultMap="map">
    select cont
    from rep_why
      left outer join cmt_rep on rep_why.rwno=cmt_rep.rwno
    where cmt_rep.ctno=#{value}
    group by cont
  </select>
  
  <select id='existCmtInBot' parameterType="int" resultType="int">
    select count(*)
    from bot_cmt 
    where ctno=#{value}
  </select>
  
  <!-- ctno를 사용하여 댓글 지우기 (DB에서 삭제) -->
  <delete id='deleteReportCmt' parameterType='int'>
    delete from cmt where ctno=#{value}
  </delete>
  <delete id='deleteCmtReportReason' parameterType='int'>
    delete from cmt_rep where ctno=#{value}
  </delete>
  <delete id='deleteReviewCmtRelByCtno' parameterType='int'>
    delete from rev_cmt where ctno=#{value}
  </delete>
  <delete id='deleteBotCmtRelByCtno' parameterType='int'>
    delete from bot_cmt where ctno=#{value}
  </delete>
  
</mapper>